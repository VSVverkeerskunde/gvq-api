# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'nl'
    sender_email_nl: 'quiz@vsv.be'
    sender_name_nl: 'Grote verkeersquiz 2018'
    sender_email_fr: 'quiz@awsr.be'
    sender_name_fr: 'Quiz de la Route 2018'
    bucket_name: '%env(BUCKET_NAME)%'
    upload_target: '%env(UPLOAD_TARGET)%'
    team_file : '%kernel.project_dir%/config/teams.yaml'
    env(REDIS_HOST): 'redis'
    env(REDIS_PORT): 6379
    env(QUIZ_ALLOW_ANONYMOUS): 'false'
    env(REPORT_ALLOW_CONTACT): 'false'
    env(CONTEST_CLOSED): 'false'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    VSV\GVQ_API\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ### SERVICES ###
    company_json_enricher:
      class: VSV\GVQ_API\Company\Serializers\CompanyJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    question_json_enricher:
      class: VSV\GVQ_API\Question\Serializers\QuestionJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    registration_json_enricher:
      class: VSV\GVQ_API\Account\Serializers\RegistrationJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    local_adapter:
      class: League\Flysystem\Adapter\Local
      arguments:
        $root: '%kernel.project_dir%/public/uploads'

    s3_client:
      class: AWS\S3\S3Client
      factory: Aws\S3\S3Client::factory
      arguments:
        -
          version: 'latest'
          region: 'eu-west-1'

    s3_adapter:
      class: League\Flysystem\AwsS3v3\AwsS3Adapter
      arguments:
        $client: '@s3_client'
        $bucket: '%bucket_name%'

    fly_system:
      class: League\Flysystem\Filesystem
      arguments: ["@=parameter('upload_target')==='remote' ? service('s3_adapter'): service('local_adapter')"]

    image_validator:
      class: VSV\GVQ_API\Image\Validation\ImageValidator
      arguments:
        $maxFileSize: 2097152
        $supportedMimeTypes: ['image/jpeg', 'image/png']

    uuid_factory:
      class: Ramsey\Uuid\UuidFactory

    time_zone:
      class: \DateTimeZone
      arguments:
        - 'Europe/Brussels'

    quiz_delay:
      class: VSV\GVQ_API\Quiz\ValueObjects\AllowedDelay
      arguments:
        $value: 40

    quiz_year:
      class: \VSV\GVQ_API\Question\ValueObjects\Year
      arguments:
        $value: 2018

    quiz_start_date:
      class: \DateTimeImmutable
      arguments:
        $time: '2018-10-18'
        $timezone: '@time_zone'

    sender_email_nl:
      class: VSV\GVQ_API\User\ValueObjects\Email
      arguments:
        $value: '%sender_email_nl%'

    sender_name_nl:
      class: VSV\GVQ_API\Common\ValueObjects\NotEmptyString
      arguments:
        $value: '%sender_name_nl%'

    language_nl:
      class: VSV\GVQ_API\Common\ValueObjects\Language
      arguments:
        $value: 'nl'

    sender_nl:
      class: VSV\GVQ_API\Mail\Models\Sender
      arguments:
       $email: '@sender_email_nl'
       $name: '@sender_name_nl'
       $language: '@language_nl'

    sender_email_fr:
      class: VSV\GVQ_API\User\ValueObjects\Email
      arguments:
        $value: '%sender_email_fr%'

    sender_name_fr:
      class: VSV\GVQ_API\Common\ValueObjects\NotEmptyString
      arguments:
        $value: '%sender_name_fr%'

    language_fr:
      class: VSV\GVQ_API\Common\ValueObjects\Language
      arguments:
        $value: 'fr'

    sender_fr:
      class: VSV\GVQ_API\Mail\Models\Sender
      arguments:
       $email: '@sender_email_fr'
       $name: '@sender_name_fr'
       $language: '@language_fr'

    VSV\GVQ_API\Mail\Service\SwiftMailService:
      arguments:
        $senders: ['@sender_nl', '@sender_fr']

    partner_yaml_repository:
      class: VSV\GVQ_API\Partner\Repositories\PartnerYamlRepository
      arguments:
        $partnerFile: '%kernel.project_dir%/config/partners.yaml'

    redis_service:
      class: \Redis
      calls:
        - method: connect
          arguments:
            - '%env(resolve:REDIS_HOST)%'
            - '%env(resolve:REDIS_PORT)%'
      public: true

    quiz_redis_repository:
      class: VSV\GVQ_API\Quiz\Repositories\QuizRedisRepository
      arguments:
        $redis: '@redis_service'
      public: true

    started_quiz_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\StartedQuizRedisRepository
      arguments:
        $redis: '@redis_service'

    finished_quiz_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\FinishedQuizRedisRepository
      arguments:
        $redis: '@redis_service'

    question_result_redis_repository:
      class: VSV\GVQ_API\Quiz\Repositories\QuestionResultRedisRepository
      arguments:
        $redis: '@redis_service'
      public: true

    unique_participant_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\UniqueParticipantRedisRepository
      arguments:
        $redis: '@redis_service'

    team_total_score_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\TeamTotalScoreRedisRepository
      arguments:
        $redis: '@redis_service'

    team_participation_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\TeamParticipationRedisRepository
      arguments:
        $redis: '@redis_service'

    answered_correct:
      class: VSV\GVQ_API\Common\ValueObjects\NotEmptyString
      arguments:
        $value: 'answered_correct'

    question_answered_correct_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\QuestionCounterRedisRepository
      arguments:
        $redis: '@redis_service'
        $keyPrefix: '@answered_correct'

    answered_incorrect:
      class: VSV\GVQ_API\Common\ValueObjects\NotEmptyString
      arguments:
        $value: 'answered_incorrect'

    question_answered_incorrect_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\QuestionCounterRedisRepository
      arguments:
        $redis: '@redis_service'
        $keyPrefix: '@answered_incorrect'

    question_difficulty_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\QuestionDifficultyRedisRepository
      arguments:
        $redis: '@redis_service'
        $answeredCorrectRepository: '@question_answered_correct_redis_repository'
        $answeredInCorrectRepository: '@question_answered_incorrect_redis_repository'

    category_answered_correct_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\CategoryDifficultyRedisRepository
      arguments:
        $redis: '@redis_service'
        $key: '@answered_correct'

    category_answered_incorrect_redis_repository:
      class: VSV\GVQ_API\Statistics\Repositories\CategoryDifficultyRedisRepository
      arguments:
        $redis: '@redis_service'
        $key: '@answered_incorrect'

    question_result_projector:
      class: VSV\GVQ_API\Quiz\Projectors\QuestionResultProjector
      arguments:
        $questionResultRepository: '@question_result_redis_repository'

    started_quizzes_projector:
      class: VSV\GVQ_API\Statistics\Projectors\StartedQuizzesProjector
      arguments:
        $startedQuizRepository: '@started_quiz_redis_repository'

    finished_quizzes_projector:
      class: VSV\GVQ_API\Statistics\Projectors\FinishedQuizzesProjector
      arguments:
        $finishedQuizRepository: '@finished_quiz_redis_repository'
        $quizRepository: '@quiz_redis_repository'

    quiz_projector:
      class: VSV\GVQ_API\Quiz\Projectors\QuizProjector
      arguments:
        $quizRepository: '@quiz_redis_repository'

    unique_participant_projector:
      class: VSV\GVQ_API\Statistics\Projectors\UniqueParticipantProjector
      arguments:
        $uniqueParticipantRepository: '@unique_participant_redis_repository'
        $quizRepository: '@quiz_redis_repository'

    top_score_projector:
      class: VSV\GVQ_API\Statistics\Projectors\TopScoresProjector
      arguments:
        $quizRepository: '@quiz_redis_repository'

    employee_participation_projector:
      class: VSV\GVQ_API\Statistics\Projectors\EmployeeParticipationProjector
      arguments:
        $quizRepository: '@quiz_redis_repository'
        
    team_total_score_projector:
      class: VSV\GVQ_API\Statistics\Projectors\TeamTotalScoreProjector
      arguments:
        $teamTotalScoreRepository: '@team_total_score_redis_repository'
        $quizRepository: '@quiz_redis_repository'

    team_participations_projector:
      class: VSV\GVQ_API\Statistics\Projectors\TeamParticipationsProjector
      arguments:
        $teamParticipationRepository: '@team_participation_redis_repository'
        $quizRepository: '@quiz_redis_repository'

    question_difficulty_projector:
      class: VSV\GVQ_API\Statistics\Projectors\QuestionDifficultyProjector
      arguments:
        $questionDifficultyRepository: '@question_difficulty_redis_repository'
        $questionAnsweredCorrectRepository: '@question_answered_correct_redis_repository'
        $questionAnsweredInCorrectRepository: '@question_answered_incorrect_redis_repository'

    category_difficulty_projector:
      class: VSV\GVQ_API\Statistics\Projectors\CategoryDifficultyProjector
      arguments:
        $categoryCorrectRepository: '@category_answered_correct_redis_repository'
        $categoryInCorrectRepository: '@category_answered_incorrect_redis_repository'

    in_memory_event_store:
      class: Broadway\EventStore\InMemoryEventStore

    doctrine_event_store:
      class: VSV\GVQ_API\Quiz\EventStore\DoctrineEventStore
      public: true

    simple_event_bus:
      class: Broadway\EventHandling\SimpleEventBus
      calls:
        - method: subscribe
          arguments:
            - '@started_quizzes_projector'
        - method: subscribe
          arguments:
            - '@question_result_projector'
        - method: subscribe
          arguments:
            - '@quiz_projector'
        - method: subscribe
          arguments:
            - '@finished_quizzes_projector'
        - method: subscribe
          arguments:
            - '@unique_participant_projector'
        - method: subscribe
          arguments:
            - '@top_score_projector'
        - method: subscribe
          arguments:
            - '@employee_participation_projector'
        - method: subscribe
          arguments:
            - '@team_total_score_projector'
        - method: subscribe
          arguments:
            - '@team_participations_projector'
        - method: subscribe
          arguments:
            - '@question_difficulty_projector'
        - method: subscribe
          arguments:
            - '@category_difficulty_projector'
      public: true

    simple_unique_replay_event_bus:
      class: Broadway\EventHandling\SimpleEventBus
      calls:
        - method: subscribe
          arguments:
          - '@quiz_projector'
        - method: subscribe
          arguments:
          - '@unique_participant_projector'
      public: true

    quiz_aggregate_repository:
      class: VSV\GVQ_API\Quiz\Repositories\QuizAggregateRepository
      arguments:
        $eventStore: '@doctrine_event_store'
        $eventBus: '@simple_event_bus'

    quiz_composition_repository:
      class: VSV\GVQ_API\Quiz\Repositories\QuizCompositionYamlRepository
      arguments:
        $quizCompositionFile: '%kernel.project_dir%/config/quiz_composition.yaml'

    team_repository:
      class: VSV\GVQ_API\Team\Repositories\TeamYamlRepository
      arguments:
        $teamFile: '%team_file%'

    quiz_service:
      class: VSV\GVQ_API\Quiz\Service\QuizService
      arguments:
        $uuidFactory: '@uuid_factory'
        $quizCompositionRepository: '@quiz_composition_repository'
        $year: '@quiz_year'
        $allowedDelay: '@quiz_delay'

    tie_breaker_yaml_repository:
      class: VSV\GVQ_API\Contest\Repositories\TieBreakerYamlRepository
      arguments:
        $tieBreakersFile: '%kernel.project_dir%/config/tie_breakers.yaml'

    statistics_service:
      class: VSV\GVQ_API\Statistics\Service\StatisticsService
      arguments:
        $startedQuizRepository: '@started_quiz_redis_repository'
        $finishedQuizRepository: '@finished_quiz_redis_repository'
        $uniqueParticipantRepository: '@unique_participant_redis_repository'
        $partnerRepository: '@partner_yaml_repository'

    report_service:
      class: VSV\GVQ_API\Report\Service\ReportService
      arguments:
        $questionDifficultyRepository: '@question_difficulty_redis_repository'
        $categoryCorrectRepository: '@category_answered_correct_redis_repository'
        $categoryInCorrectRepository: '@category_answered_incorrect_redis_repository'

    contest_service:
      class: VSV\GVQ_API\Contest\Service\ContestService
      arguments:
        $questionResultRepository: '@question_result_redis_repository'
        $quizRepository: '@quiz_redis_repository'
        $closed: '%env(bool:CONTEST_CLOSED)%'

    dashboard_service:
      class: VSV\GVQ_API\Dashboard\Service\DashboardService

    team_service:
      class: VSV\GVQ_API\Team\Service\TeamService
      arguments:
        $year: '@quiz_year'
        $teamTotalScoreRepository: '@team_total_score_redis_repository'
        $teamParticipationRepository: '@team_participation_redis_repository'
        $teamRepository: '@team_repository'

    ### CONTROLLERS ###
    VSV\GVQ_API\Account\Controllers\AccountController:
      arguments:
        $jsonEnricher: '@registration_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Account\Controllers\AccountViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
        $quizStartDate: '@quiz_start_date'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Question\Controllers\CategoryController:
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Company\Controllers\CompanyController:
      arguments:
        $jsonEnricher: '@company_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Question\Controllers\QuestionController:
      arguments:
        $uuidFactory: '@uuid_factory'
        $jsonEnricher: '@question_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Company\Controllers\CompanyViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Question\Controllers\QuestionViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\User\Controllers\UserViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Image\Controllers\ImageController:
      arguments:
        $fileSystem: '@fly_system'
        $imageValidator: '@image_validator'
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Quiz\Controllers\QuizController:
      arguments:
        $quizService: '@quiz_service'
        $quizAggregateRepository: '@quiz_aggregate_repository'
        $partnerRepository: '@partner_yaml_repository'
        $teamRepository: '@team_repository'
        $questionResultRepository: '@question_result_redis_repository'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Quiz\Controllers\QuizViewController:
      arguments:
        $year: '@quiz_year'
        $allowAnonymous: '%env(bool:QUIZ_ALLOW_ANONYMOUS)%'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Statistics\Controllers\StatisticsViewController:
      arguments:
        $year : '@quiz_year'
        $statisticsService: '@statistics_service'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Dashboard\Controllers\DashboardViewController:
      arguments:
        $year: '@quiz_year'
        $statisticsService: '@statistics_service'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Report\Controllers\ReportViewController:
      arguments:
        $reportService: '@report_service'
        $allowContact: '%env(bool:REPORT_ALLOW_CONTACT)%'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Document\Controllers\DocumentViewController:
      arguments:
        $documentsPath: '%kernel.project_dir%/public/documents/'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Contest\Controllers\ContestViewController:
      arguments:
        $year: '@quiz_year'
        $contestService: '@contest_service'
        $uuidFactory: '@uuid_factory'
        $quizRepository: '@quiz_redis_repository'
        $tieBreakerRepository: '@tie_breaker_yaml_repository'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Team\Controllers\TeamController:
      arguments:
        $teamService: '@team_service'
        $teamFile: '%team_file%'
        $year: '@quiz_year'
      tags: ['controller.service_arguments']
