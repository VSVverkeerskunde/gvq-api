# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'nl'
    sender_email: 'info@gvq.be'
    sender_name: 'Info GVQ'
    bucket_name: '%env(BUCKET_NAME)%'
    upload_target: '%env(UPLOAD_TARGET)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    VSV\GVQ_API\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    ### SERVICES ###
    company_json_enricher:
      class: VSV\GVQ_API\Company\Serializers\CompanyJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    question_json_enricher:
      class: VSV\GVQ_API\Question\Serializers\QuestionJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    registration_json_enricher:
      class: VSV\GVQ_API\Account\Serializers\RegistrationJsonEnricher
      arguments:
        $uuidFactory: '@uuid_factory'

    local_adapter:
      class: League\Flysystem\Adapter\Local
      arguments:
        $root: '%kernel.project_dir%/public/uploads'

    s3_client:
      class: AWS\S3\S3Client
      factory: Aws\S3\S3Client::factory
      arguments:
        -
          version: 'latest'
          region: 'eu-west-1'

    s3_adapter:
      class: League\Flysystem\AwsS3v3\AwsS3Adapter
      arguments:
        $client: '@s3_client'
        $bucket: '%bucket_name%'

    fly_system:
      class: League\Flysystem\Filesystem
      arguments: ["@=parameter('upload_target')==='remote' ? service('s3_adapter'): service('local_adapter')"]

    image_validator:
      class: VSV\GVQ_API\Image\Validation\ImageValidator
      arguments:
        $maxFileSize: 2097152
        $supportedMimeTypes: ['image/jpeg', 'image/png']

    uuid_factory:
      class: Ramsey\Uuid\UuidFactory

    VSV\GVQ_API\Mail\Models\Sender:
      factory: 'VSV\GVQ_API\Mail\Models\SenderFactory:fromNative'
      arguments:
       $email: '%sender_email%'
       $name: '%sender_name%'

    ### CONTROLLERS ###
    VSV\GVQ_API\Account\Controllers\AccountController:
      arguments:
        $jsonEnricher: '@registration_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Account\Controllers\AccountViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']
      
    VSV\GVQ_API\Question\Controllers\CategoryController:
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Company\Controllers\CompanyController:
      arguments:
        $jsonEnricher: '@company_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Question\Controllers\QuestionController:
      arguments:
        $uuidFactory: '@uuid_factory'
        $jsonEnricher: '@question_json_enricher'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Company\Controllers\CompanyViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Question\Controllers\QuestionViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\User\Controllers\UserViewController:
      arguments:
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']

    VSV\GVQ_API\Image\Controllers\ImageController:
      arguments:
        $fileSystem: '@fly_system'
        $imageValidator: '@image_validator'
        $uuidFactory: '@uuid_factory'
      tags: ['controller.service_arguments']
